@using Web.Areas.Store.Enums
@model PaginatedResult<Product>

<!--Page Title-->
<section class="page-title centred" style="background-image: url('@Url.Content("~/Store/images/cakes/header-shop.jpg")');"
>
    <div class="auto-container">
        <div class="content-box">
            <div class="title">
                <h1>All Products</h1>
            </div>
            <ul class="bread-crumb clearfix">
                <li><a asp-action="Index" asp-controller="Home">Home</a></li>
                <li>All Products</li>
            </ul>
        </div>
    </div>
</section>
<!--End Page Title-->

<!-- shop-page-section -->
<section class="shop-page-section shop-page-1">
    <div class="auto-container">
        <div class="row clearfix">
            <div class="col-lg-3 col-md-12 col-sm-12 sidebar-side">
                <div class="shop-sidebar default-sidebar">
                    <div class="sidebar-widget sidebar-search">
                        <form asp-action="Index" method="get" id="searchForm">
                            <div class="form-group">
                                <input type="search" 
                                       name="searchTerm" 
                                       value="@ViewData["SearchTerm"]" 
                                       placeholder="Search..." 
                                       class="form-control">
                                <button type="submit"><i class="icon-Search"></i></button>
                            </div>
                            <!-- Hidden inputs to preserve other filter values -->
                            <input type="hidden" name="category" value="@ViewData["SelectedCategory"]" />
                            <input type="hidden" name="sortOrder" value="@ViewData["CurrentSortOrder"]" />
                            <input type="hidden" name="minPrice" id="current-min-price" />
                            <input type="hidden" name="maxPrice" id="current-max-price" />
                        </form>
                    </div>
                    <div class="sidebar-widget sidebar-categories">
                        <div class="widget-title">
                            <h3>Shop by Categories</h3>
                        </div>
                        <div class="widget-content">
                            <ul class="categories-list clearfix">
                                @await Component.InvokeAsync("Category")
                            </ul>
                        </div>
                    </div>

                    <div class="sidebar-widget price-range mb-50">
                        <h4 class="pro-sidebar-title mb-3">Price Range</h4>
                        <div class="price-filter d-flex align-items-center">
                            <div class="price-slider-amount w-100 mr-3">
                                <input type="number" id="min-price" name="min-price" placeholder="Min Price" class="form-control"/>
                            </div>
                            <span class="mr-3">to</span>
                            <div class="price-slider-amount w-100 mr-3">
                                <input type="number" id="max-price" name="max-price" placeholder="Max Price" class="form-control"/>
                            </div>
                            <button type="button" onclick="filterByPrice()" class="btn btn-primary" style="background-color: #E3A087; border-color: #E3A087;">Filter</button>
                        </div>
                    </div>


                    <div class="sidebar-widget post-widget">
                        <div class="widget-title">
                            <h3>Featured Products</h3>
                        </div>
                        <div class="post-inner">
                            <div class="post">
                                <figure class="image-box"><a href="shop-details.html"><img
                                            src="assets/images/resource/shop/post-1.jpg" alt=""></a></figure>
                                <h5><a href="shop-details.html">Vanilla Ice Cream</a></h5>
                                <p>$50.00</p>
                            </div>
                            <div class="post">
                                <figure class="image-box"><a href="shop-details.html"><img
                                            src="assets/images/resource/shop/post-2.jpg" alt=""></a></figure>
                                <h5><a href="shop-details.html">Donuts Cake</a></h5>
                                <p>$35.00</p>
                            </div>
                            <div class="post">
                                <figure class="image-box"><a href="shop-details.html"><img
                                            src="assets/images/resource/shop/post-3.jpg" alt=""></a></figure>
                                <h5><a href="shop-details.html">Corne Ice Cream</a></h5>
                                <p>$60.00</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9 col-md-12 col-sm-12 content-side">
                <div class="our-shop">
                    <div class="item-shorting clearfix">
                        <div class="left-column pull-left clearfix">
                            <div class="text">
                                <p>Showing @Model.CurrentPage of @Model.TotalPages pages - Total items: @Model.TotalItems</p>
                            </div>
                        </div>
                        <div class="right-column pull-right clearfix">
                            <div class="short-box clearfix">
                                <select id="sort-select" onchange="sortProducts(this.value)">
                                    <option value="@ProductSortOrder.Default" selected="@(ViewData["CurrentSortOrder"] as ProductSortOrder? == ProductSortOrder.Default)">Default Sorting</option>
                                    <option value="@ProductSortOrder.NameAsc" selected="@(ViewData["CurrentSortOrder"] as ProductSortOrder? == ProductSortOrder.NameAsc)">Name (A-Z)</option>
                                    <option value="@ProductSortOrder.NameDesc" selected="@(ViewData["CurrentSortOrder"] as ProductSortOrder? == ProductSortOrder.NameDesc)">Name (Z-A)</option>
                                    <option value="@ProductSortOrder.PriceAsc" selected="@(ViewData["CurrentSortOrder"] as ProductSortOrder? == ProductSortOrder.PriceAsc)">Price (Low to High)</option>
                                    <option value="@ProductSortOrder.PriceDesc" selected="@(ViewData["CurrentSortOrder"] as ProductSortOrder? == ProductSortOrder.PriceDesc)">Price (High to Low)</option>
                                    <option value="@ProductSortOrder.Newest" selected="@(ViewData["CurrentSortOrder"] as ProductSortOrder? == ProductSortOrder.Newest)">Newest First</option>
                                </select>
                            </div>
                            <div class="menu-box">
                                <a href="shop.html"><i class="icon-Menu"></i></a>
                                <a href="shop.html"><i class="icon-List-View"></i></a>
                            </div>
                        </div>
                    </div>
                    @await Html.PartialAsync("_ListProduct", Model)
                    @await Html.PartialAsync("_Pagination", Model)
                </div>
            </div>
        </div>
    </div>
</section>
<!-- shop-page-section end -->

<script>
    function filterByPrice() {
        var minPrice = document.getElementById('min-price').value;
        var maxPrice = document.getElementById('max-price').value;
        
        // Update hidden fields in search form
        document.getElementById('current-min-price').value = minPrice;
        document.getElementById('current-max-price').value = maxPrice;
        
        // Submit the search form
        document.getElementById('searchForm').submit();
    }

    function sortProducts(sortOrder) {
        var urlParams = new URLSearchParams(window.location.search);
        
        // Update sort order
        urlParams.set('sortOrder', sortOrder);
        
        // Keep other parameters
        var category = urlParams.get('category');
        if(category) urlParams.set('category', category);
        
        var minPrice = urlParams.get('minPrice');
        if(minPrice) urlParams.set('minPrice', minPrice);
        
        var maxPrice = urlParams.get('maxPrice');
        if(maxPrice) urlParams.set('maxPrice', maxPrice);
        
        var searchTerm = urlParams.get('searchTerm');
        if(searchTerm) urlParams.set('searchTerm', searchTerm);
        
        // Reset to page 1 when sorting
        urlParams.set('pageNumber', 1);
        
        // Redirect with new parameters
        window.location.href = window.location.pathname + '?' + urlParams.toString();
    }

    // Set initial values if they exist in URL
    window.onload = function() {
        var urlParams = new URLSearchParams(window.location.search);
        
        var minPrice = urlParams.get('minPrice');
        var maxPrice = urlParams.get('maxPrice');
        
        if(minPrice) document.getElementById('min-price').value = minPrice;
        if(maxPrice) document.getElementById('max-price').value = maxPrice;
    }
</script>