<style>
    table.dataTable th.dt-type-numeric,
    table.dataTable th.dt-type-date,
    table.dataTable td.dt-type-numeric,
    table.dataTable td.dt-type-date {
        text-align: center;
    }

    .table span,
    .table p {
        color: white;
    }
</style>
<div class="container pb-4">
    <h1 class="mb-4">Customers Managerment</h1>

    <table id="customersTable" class="table table-striped table-hover text-center">
        <thead class="table-dark">
            <tr>
                <th>Name</th>
                <th>Phone</th>
                <th>Address</th>
                <th>Created At</th>
                <th>Action</th>
            </tr>
        </thead>
        <tfoot class="table-dark">
            <tr>
                <th>Name</th>
                <th>Phone</th>
                <th>Address</th>
                <th>Created At</th>
                <th>Action</th>
            </tr>
        </tfoot>
    </table>

    <!-- Modal for Purchase History -->
    <div class="modal fade" id="historyModal" tabindex="-1" role="dialog" aria-labelledby="historyModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="historyModalLabel">Purchase History</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <table id="orderHistoryTable" class="table text-center">
                        <thead class="table-dark">
                            <tr>
                                <th>Date</th>
                                <th>Total</th>
                                <th>Received Amount</th>
                                <th>Change Return</th>
                                <th>Amount Product</th>
                                <th>Salesperson</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    @* <script>
        $('#customersTable').DataTable({
            processing: true,
            serverSide: true,
            order: [],
            lengthMenu: [10, 20, 30, 50],
            columnDefs: [{ className: 'dt-center', targets: '_all' }, { orderable: false, targets: '_all' }],
            ajax: {
                url: '/customers/all',
                type: 'GET'
            },
            columns: [
                { data: 'fullName' },
                { data: 'phoneNumber' },
                { data: 'address' },
                {
                    data: 'createdAt',
                    render: function (data) {
                        return new Date(data).toLocaleString('en-GB', { timeZone: 'UTC' })
                    }
                },
                {
                    data: '_id',
                    render: function (data) {
                        return `<button class="btn btn-primary btn-history" 
                                        data-customer-id="${data}" 
                                        data-toggle="modal" 
                                        data-target="#historyModal">
                                    Purchase History
                                </button>`
                    }
                }

            ]
        })

        let orderHistoryTable = null

        $('#historyModal').on('shown.bs.modal', function (e) {
            const name = $(e.relatedTarget).closest('tr').find('td').eq(0).text()
            $(this).find('.modal-title').text(`${name}'s Purchase History`)

            const customerId = $(e.relatedTarget).data('customer-id')
            fetchCustomerOrderHistory(customerId)
        })

        $('#historyModal').on('hidden.bs.modal', function () {
            orderHistoryTable = null
            $('#orderHistoryTable').DataTable().clear().destroy()
        })

        function fetchCustomerOrderHistory(customerId) {
            orderHistoryTable = $('#orderHistoryTable').DataTable({
                processing: true,
                serverSide: true,
                lengthMenu: [10, 20, 30, 50],
                columnDefs: [
                    { className: 'dt-center', targets: '_all' },
                    { orderable: false, targets: [2, 3, 4, 5] },
                    { searchable: false, targets: '_all' }
                ],
                order: [0, 'desc'],
                searching: false,
                ajax: {
                    url: `orders/customer/${customerId}`,
                    type: 'GET',
                },
                columns: [
                    {
                        data: 'createdAt',
                        name: 'createdAt',
                        render: (data) => new Date(data).toLocaleDateString()
                    },
                    {
                        data: 'totalAmount',
                        name: 'totalAmount',
                        render: (data) => data.toLocaleString() + ' VNĐ'
                    },
                    {
                        data: 'payment.received',
                        render: (data) => data.toLocaleString() + ' VNĐ'
                    },
                    {
                        data: 'payment.change',
                        render: (data) => data.toLocaleString() + ' VNĐ'
                    },
                    {
                        data: 'products.length'
                    },
                    {
                        data: 'salesPerson.fullName'
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `<button class="btn btn-primary btn-info btn-sm btn-show-detail" type="button">
                                        Show Detail
                                    </button>`
                        }
                    }
                ]
            })
        }

        $('#orderHistoryTable tbody').on('click', '.btn-show-detail', function () {
            const tr = $(this).closest('tr')
            const row = orderHistoryTable.row(tr)

            if (row.child.isShown()) {
                row.child.hide()
                tr.removeClass('shown')
            } else {
                const data = row.data()
                const detailHtml = renderOrderDetail(data.products)
                row.child(detailHtml).show()
                tr.addClass('shown')
            }
        })

        function renderOrderDetail(products) {
            const isAdmin = '{{user.role}}' === 'Admin';
            let html = `
                <table class="table table-bordered table-sm">
                    <thead>
                        <tr>
                            <th class='text-center'>Product</th>
                            <th class='text-center'>Quantity</th>
                            <th class='text-center'>Unit Price</th>
                            ${isAdmin ? '<th class="text-center">Import Price</th>' : ''}
                            <th class='text-center'>Total</th>
                            ${isAdmin ? '<th class="text-center">Profit</th>' : ''}
                        </tr>
                    </thead>
                    <tbody>`
            products.forEach(product => {
                html += `
                    <tr>
                        <td>${product.name}</td>
                        <td>${product.quantity}</td>
                        <td>${product.price.toLocaleString()} VNĐ</td>
                        ${isAdmin ? `<td>${product.importPrice ? product.importPrice.toLocaleString() : 0} VNĐ</td>` : ''}
                        <td>${(product.quantity * product.price).toLocaleString()} VNĐ</td>
                        ${isAdmin ? `<td>${(product.quantity * (product.price - (product.importPrice || 0))).toLocaleString()} VNĐ</td>` : ''}
                    </tr>`
            })
            html += `</tbody></table>`
            return html
        }
    </script> *@
}