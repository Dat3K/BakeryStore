@{
    ViewData["Title"] = "Customer Management";
}

<style>
    .profile-picture {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
    }

    #customersTable thead th,
    #customersTable th {
        white-space: nowrap;
        color: #676E8A !important;
        font-weight: 600;
    }

    .table td {
        vertical-align: middle;
    }

    .order-status {
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.85rem;
    }

    .order-items-container {
        background-color: #f8f9fa;
        border-radius: 8px;
        margin: 10px 0;
    }

    .view-orders {
        color: #4e73df;
        text-decoration: none;
        font-weight: 500;
    }

    .view-orders:hover {
        color: #2e59d9;
        text-decoration: underline;
    }

    #customersTable tbody tr {
        cursor: pointer;
    }

    #customersTable tbody tr:hover {
        background-color: rgba(78, 115, 223, 0.05) !important;
    }

    .dt-control {
        cursor: pointer;
    }

    .dt-control:before {
        content: '►';
        color: #4e73df;
    }

    tr.shown .dt-control:before {
        content: '▼';
    }
</style>

<div class="container-fluid pb-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Customer Management</h1>
    </div>

    <div class="card shadow">
        <div class="card-body">
            <table id="customersTable" class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Picture</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Nickname</th>
                        <th>Created At</th>
                        <th>Updated At</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- Order History Modal -->
<div class="modal fade" id="orderHistoryModal" tabindex="-1" aria-labelledby="orderHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="orderHistoryModalLabel">Order History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table id="orderHistoryTable" class="table table-striped">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Order #</th>
                                <th>Date</th>
                                <th>Status</th>
                                <th>Payment Method</th>
                                <th>Total Amount</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let orderHistoryTable;
            
            // Initialize customers table
            const customersTable = $('#customersTable').DataTable({
                ajax: {
                    url: '/POS/Customer/GetCustomers',
                    dataSrc: 'data'
                },
                columns: [
                    {
                        data: 'picture',
                        render: function (data, type, row) {
                            if (type === 'display') {
                                return data ? `<img src="${data}" class="profile-picture" alt="Profile Picture">` 
                                    : '<img src="/images/default-avatar.png" class="profile-picture" alt="Default Profile">';
                            }
                            return data;
                        },
                        orderable: false
                    },
                    { 
                        data: 'name',
                        render: function (data, type, row) {
                            return data || 'N/A';
                        }
                    },
                    { data: 'email' },
                    { 
                        data: 'nickname',
                        render: function (data, type, row) {
                            return data || 'N/A';
                        }
                    },
                    { data: 'createdAt' },
                    { data: 'updatedAt' }
                ],
                order: [[4, 'desc']],
                responsive: true,
                pageLength: 25,
                language: {
                    emptyTable: "No customers found",
                    zeroRecords: "No matching customers found"
                }
            });

            // Handle click on table row
            $('#customersTable tbody').on('click', 'tr', function() {
                const data = customersTable.row(this).data();
                if (data) {
                    showOrderHistory(data.sid, data.name || 'N/A');
                }
            });

            function showOrderHistory(userId, customerName) {
                // Update modal title
                $('#orderHistoryModalLabel').text(`Order History - ${customerName}`);
                
                // Initialize order history table if not already initialized
                if (!orderHistoryTable) {
                    orderHistoryTable = $('#orderHistoryTable').DataTable({
                        responsive: true,
                        columns: [
                            {
                                className: 'details-control',
                                orderable: false,
                                data: null,
                                defaultContent: '<i class="fas fa-chevron-down"></i>'
                            },
                            { data: 'orderNumber' },
                            { data: 'createdAt' },
                            { 
                                data: 'status',
                                render: function(data) {
                                    const statusClasses = {
                                        'Pending': 'warning',
                                        'Processing': 'info',
                                        'Shipped': 'primary',
                                        'Delivered': 'success',
                                        'Cancelled': 'danger'
                                    };
                                    return `<span class="badge bg-${statusClasses[data] || 'secondary'}">${data || 'N/A'}</span>`;
                                }
                            },
                            { 
                                data: 'paymentMethod',
                                render: function(data) {
                                    return data || 'None';
                                }
                            },
                            { 
                                data: 'totalAmount',
                                render: function(data) {
                                    return formatCurrency(data || 0);
                                },
                                className: 'text-end'
                            }
                        ],
                        order: [[2, 'desc']]
                    });

                    // Add event listener for opening and closing details
                    $('#orderHistoryTable tbody').on('click', 'td.details-control', function () {
                        var tr = $(this).closest('tr');
                        var row = orderHistoryTable.row(tr);
                        var icon = $(this).find('i');

                        if (row.child.isShown()) {
                            // This row is already open - close it
                            row.child.hide();
                            tr.removeClass('shown');
                            icon.removeClass('fa-chevron-up').addClass('fa-chevron-down');
                        } else {
                            // Open this row
                            row.child(createOrderItemsTable(row.data().orderItems)).show();
                            tr.addClass('shown');
                            icon.removeClass('fa-chevron-down').addClass('fa-chevron-up');
                        }
                    });
                }

                // Load order data
                $.ajax({
                    url: `/POS/Customer/GetCustomerOrders/${userId}`,
                    method: 'GET',
                    success: function(response) {
                        if (response.success) {
                            orderHistoryTable.clear().rows.add(response.data).draw();
                            $('#orderHistoryModal').modal('show');
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Failed to load order history'
                            });
                        }
                    },
                    error: function(xhr) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to load order history'
                        });
                    }
                });
            }

            function createOrderItemsTable(items) {
                if (!items || !items.length) {
                    return '<div class="p-3 text-center">No items found in this order</div>';
                }

                let total = 0;
                let html = `
                    <div class="order-items-container p-3 bg-light">
                        <div class="table-responsive">
                            <table class="table table-sm table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Product Name</th>
                                        <th>SKU</th>
                                        <th class="text-end">Unit Price</th>
                                        <th class="text-center">Quantity</th>
                                        <th class="text-end">Subtotal</th>
                                    </tr>
                                </thead>
                                <tbody>`;
                items.forEach(item => {
                    total += item.subtotal || 0;
                    html += `
                        <tr>
                            <td>${item.product.productName || 'N/A'}</td>
                            <td>${item.product.productSku || 'N/A'}</td>
                            <td class="text-end">${formatCurrency(item.unitPrice || 0)}</td>
                            <td class="text-center">${item.quantity || 0}</td>
                            <td class="text-end">${formatCurrency(item.subtotal || 0)}</td>
                        </tr>`;
                });

                html += `
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <td colspan="4" class="text-end fw-bold">Total:</td>
                                        <td class="text-end fw-bold">${formatCurrency(total)}</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>`;

                return html;
            }

            // Add some CSS for the dropdown icon
            $('<style>')
                .text(`
                    .details-control {
                        cursor: pointer;
                    }
                    .details-control i {
                        transition: transform 0.2s;
                    }
                    tr.shown .details-control i {
                        transform: rotate(180deg);
                    }
                    .order-items-container {
                        border-radius: 4px;
                        margin: 0.5rem 2rem;
                    }
                `)
                .appendTo('head');

            // Helper function to format currency
            function formatCurrency(amount) {
                return new Intl.NumberFormat('en-US', {
                    style: 'currency',
                    currency: 'USD',
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                }).format(amount);
            }
        });
    </script>
}